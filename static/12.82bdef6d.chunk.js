webpackJsonp([12],{917:function(n,t,e){var a=e(2),r=e(54),o=e(19).PageRenderer;o.__esModule&&(o=o.default);var i=r({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:e(932)}},componentWillMount:function(){},render:function(){return a.createElement(o,Object.assign({},this.props,{content:this.state.content}))}});i.__catalog_loader__=!0,n.exports=i},932:function(n,t){n.exports='### Button\n\nButton Component with a standard, outline, and transparent variants available.\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: variant\n    Type: string\n    Default:\n    Notes: Determines style variant\n  - Prop: children\n    Type: node\n    Default:\n    Notes: Render as the Button\'s children\n  - Prop: ...props\n    Type: any\n    Default:\n    Notes: Passes through any other props to underlying button, or in the case of an href prop being passed, anchor, element\n```\n\n### Standard\n\n```react\n<Button variant="standard">My cool button</Button>\n```\n\n### Standard Disabled\n\n```react\n<Button variant="standard" disabled>My cool button</Button>\n```\n\n### Outline\n\n```react\n<Button variant="outline">My cool button</Button>\n```\n\n### Outline Disabled\n\n```react\n<Button variant="outline" disabled>My cool button</Button>\n```\n\n### Transparent\n\n```react\n<Button variant="transparent">My cool button</Button>\n```\n\n### Transparent Disabled\n\n```react\n<Button variant="transparent" disabled>My cool button</Button>\n```\n\n### Badge\n\nBadge Component with a standard, outline, and transparent variants available.\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: variant\n    Type: string\n    Default:\n    Notes: Determines style variant\n  - Prop: children\n    Type: node\n    Default:\n    Notes: Render as the Badge\'s children\n  - Prop: ...props\n    Type: any\n    Default:\n    Notes: Passes through any other props to underlying button, or in the case of an href prop being passed, anchor, element\n```\n\n### Badge Standard\n\n```react\n<Badge variant="standard">\n    <ChevronIcon size={12} color={colors.white.base} direction="left" />\n    /\n    <ChevronIcon size={12} color={colors.white.base} direction="right" />\n</Badge>\n```\n\n### Badge Standard Disabled\n\n```react\n<Badge variant="standard" disabled>\n    <ChevronIcon size={12} color={colors.white.base} direction="left" />\n    /\n    <ChevronIcon size={12} color={colors.white.base} direction="right" />\n</Badge>\n```\n\n### Badge Outline\n\n```react\n<Badge variant="outline">\n    <ChevronIcon size={12} color={colors.azure.base} direction="left" />\n    /\n    <ChevronIcon size={12} color={colors.azure.base} direction="right" />\n</Badge>\n```\n\n### Badge Outline Disabled\n\n```react\n<Badge variant="outline" disabled>\n    <ChevronIcon size={12} color={colors.azure.light} direction="left" />\n    /\n    <ChevronIcon size={12} color={colors.azure.light} direction="right" /></Badge>\n```\n\n### Badge Transparent\n\n```react\n<Badge variant="transparent">\n    <ChevronIcon size={12} color={colors.white.base} direction="left" />\n    /\n    <ChevronIcon size={12} color={colors.white.base} direction="right" /></Badge>\n```\n\n### Badge Transparent Disabled\n\n```react\n<Badge variant="transparent" disabled>\n    <ChevronIcon size={12} color={colors.white.light} direction="left" />\n    /\n    <ChevronIcon size={12} color={colors.white.light} direction="right" />\n</Badge>\n```\n\n### RatingBadge\n\nRatingBadge Component with a standard, outline, and transparent variants available. RatingBadge should be passed relevant metadata as props to populate the AggregateRating Schema.org entity. Please visit the [AggregateRating documentation page](https://schema.org/AggregateRating) and view the required props below for more details.\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: variant\n    Type: string\n    Default:\n    Notes: Determines style variant\n  - Prop: children\n    Type: node\n    Default: standard\n    Notes: Render as the RatingBadge\'s children\n  - Prop: ratingValue\n    Type: string\n    Default:\n    Notes: The rating for the content\n  - Prop: bestRating\n    Type: string\n    Default: "5"\n    Notes: The highest value allowed in this rating system. If bestRating is omitted, 5 is assumed\n  - Prop: ratingCount\n    Type: string\n    Default:\n    Notes: The count of total number of ratings\n  - Prop: ...props\n    Type: any\n    Default:\n    Notes: Passes through any other props to underlying button, or in the case of an href prop being passed, anchor, element\n```\n\n### RatingBadge Standard\n\n```react\n<RatingBadge variant="standard" ratingValue="4.8" bestRating="5" ratingCount="20">\n    4.8\n</RatingBadge>\n```\n\n### RatingBadge Standard Disabled\n\n```react\n<RatingBadge variant="standard" disabled ratingValue="4.8" bestRating="5" ratingCount="20">\n    4.8\n</RatingBadge>\n```\n\n### RatingBadge Outline\n\n```react\n<RatingBadge variant="outline" ratingValue="4.8" bestRating="5" ratingCount="20">\n    4.8\n</RatingBadge>\n```\n\n### RatingBadge Outline Disabled\n\n```react\n<RatingBadge variant="outline" disabled ratingValue="4.8" bestRating="5" ratingCount="20">\n    4.8\n</RatingBadge>\n```\n\n### RatingBadge Transparent\n\n```react\n<RatingBadge variant="transparent" ratingValue="4.8" bestRating="5" ratingCount="20">\n    4.8\n</RatingBadge>\n```\n\n### RatingBadge Transparent Disabled\n\n```react\n<RatingBadge variant="transparent" disabled ratingValue="4.8" bestRating="5" ratingCount="20">\n    4.8\n</RatingBadge>\n```\n'}});
//# sourceMappingURL=12.82bdef6d.chunk.js.map