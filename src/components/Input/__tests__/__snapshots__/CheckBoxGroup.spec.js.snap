// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CheckBoxGroup renders default input 1`] = `
.c1 {
  outline: none;
  margin: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  position: relative;
}

.checkbox--large .c1 {
  width: 24px;
  height: 24px;
}

.checkbox--small .c1 {
  width: 16px;
  height: 16px;
}

.c1:before {
  content: "";
  background-color: transparent;
  border-radius: 2px;
  border: 1px solid rgba(0,0,15,0.6);
  position: absolute;
}

.checkbox--large .c1:before {
  width: 24px;
  height: 24px;
}

.checkbox--small .c1:before {
  width: 16px;
  height: 16px;
}

.c1:before.checkbox--disabled {
  color: grey;
}

.c1:hover:before {
  border-width: 2px;
  border-color: rgba(2,108,223,1);
}

.c1:focus:before {
  outline: none;
}

.checkbox--small .c1:focus:before {
  width: 16px;
  height: 16px;
  border-radius: 2px;
  border: solid 1px rgba(2,108,223,1);
  background-color: rgba(255,255,255,1);
}

.checkbox--large .c1:focus:before {
  width: 24px;
  height: 24px;
  border-radius: 2px;
  border: solid 1px rgba(2,108,223,1);
  background-color: rgba(255,255,255,1);
}

.c1:checked:after {
  content: "";
  position: absolute;
}

.checkbox__multi--large .c1:checked:after {
  content: "";
  width: 12px;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  height: 3px;
  border-radius: 2px;
  background-color: rgba(2,108,223,1);
}

.checkbox__multi--small .c1:checked:after {
  content: "";
  width: 8px;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  height: 2px;
  border-radius: 2px;
  background-color: rgba(2,108,223,1);
}

.c0 {
  position: relative;
  outline: none;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-bottom: 10px;
  text-align: left;
  color: rgba(0,0,15,1);
}

.c0.checkbox--disabled {
  color: grey;
  cursor: default;
  pointer-events: none;
}

.c0.checkbox--large {
  font-size: 16px;
  line-height: 1.5;
}

.c0.checkbox--small {
  font-size: 14px;
  line-height: 1.5;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  outline: none;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin-left: 7px;
}

.c2 {
  width: 100%;
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: left;
  -webkit-justify-content: left;
  -ms-flex-pack: left;
  justify-content: left;
  position: absolute;
  opacity: 0;
}

.checkbox__checked .c2 {
  opacity: 1;
}

.checkbox__multi--small .c2 {
  display: none;
}

.checkbox__multi--large .c2 {
  display: none;
}

.c3 {
  margin-top: 4px;
}

<div
  onKeyDown={[Function]}
  role="checkbox"
>
   
  <label
    className="checkbox--large c0"
  >
    <input
      className="c1"
      data-testid="test-checkbox2"
      defaultChecked={false}
      disabled={false}
      id="something2input"
      name="something"
      onClick={[Function]}
      type="checkbox"
      value="2"
    />
    <div
      className="c2"
    >
      <svg
        className="c3"
        fill="none"
        fillRule="evenodd"
        height={24}
        stroke="#026CDF"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={3}
        viewBox="0 0 24 28"
        width={24}
      >
        <path
          d="M5.215 12.219l4.437 4.439 9.514-9.433"
        />
      </svg>
    </div>
    <span
      aria-checked={false}
      aria-labelledby="something2"
      className="c4"
      role="checkbox"
    />
  </label>
</div>
`;

exports[`CheckBoxGroup renders large input 1`] = `
.c1 {
  outline: none;
  margin: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  position: relative;
}

.checkbox--large .c1 {
  width: 24px;
  height: 24px;
}

.checkbox--small .c1 {
  width: 16px;
  height: 16px;
}

.c1:before {
  content: "";
  background-color: transparent;
  border-radius: 2px;
  border: 1px solid rgba(0,0,15,0.6);
  position: absolute;
}

.checkbox--large .c1:before {
  width: 24px;
  height: 24px;
}

.checkbox--small .c1:before {
  width: 16px;
  height: 16px;
}

.c1:before.checkbox--disabled {
  color: grey;
}

.c1:hover:before {
  border-width: 2px;
  border-color: rgba(2,108,223,1);
}

.c1:focus:before {
  outline: none;
}

.checkbox--small .c1:focus:before {
  width: 16px;
  height: 16px;
  border-radius: 2px;
  border: solid 1px rgba(2,108,223,1);
  background-color: rgba(255,255,255,1);
}

.checkbox--large .c1:focus:before {
  width: 24px;
  height: 24px;
  border-radius: 2px;
  border: solid 1px rgba(2,108,223,1);
  background-color: rgba(255,255,255,1);
}

.c1:checked:after {
  content: "";
  position: absolute;
}

.checkbox__multi--large .c1:checked:after {
  content: "";
  width: 12px;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  height: 3px;
  border-radius: 2px;
  background-color: rgba(2,108,223,1);
}

.checkbox__multi--small .c1:checked:after {
  content: "";
  width: 8px;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  height: 2px;
  border-radius: 2px;
  background-color: rgba(2,108,223,1);
}

.c0 {
  position: relative;
  outline: none;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-bottom: 10px;
  text-align: left;
  color: rgba(0,0,15,1);
}

.c0.checkbox--disabled {
  color: grey;
  cursor: default;
  pointer-events: none;
}

.c0.checkbox--large {
  font-size: 16px;
  line-height: 1.5;
}

.c0.checkbox--small {
  font-size: 14px;
  line-height: 1.5;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  outline: none;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin-left: 7px;
}

.c2 {
  width: 100%;
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: left;
  -webkit-justify-content: left;
  -ms-flex-pack: left;
  justify-content: left;
  position: absolute;
  opacity: 0;
}

.checkbox__checked .c2 {
  opacity: 1;
}

.checkbox__multi--small .c2 {
  display: none;
}

.checkbox__multi--large .c2 {
  display: none;
}

.c3 {
  margin-top: 4px;
}

<div
  onKeyDown={[Function]}
  role="checkbox"
>
   
  <label
    className="checkbox--large c0"
  >
    <input
      className="c1"
      data-testid="test-checkbox2"
      defaultChecked={false}
      disabled={false}
      id="something2input"
      name="something"
      onClick={[Function]}
      type="checkbox"
      value="2"
    />
    <div
      className="c2"
    >
      <svg
        className="c3"
        fill="none"
        fillRule="evenodd"
        height={24}
        stroke="#026CDF"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={3}
        viewBox="0 0 24 28"
        width={24}
      >
        <path
          d="M5.215 12.219l4.437 4.439 9.514-9.433"
        />
      </svg>
    </div>
    <span
      aria-checked={false}
      aria-labelledby="something2"
      className="c4"
      role="checkbox"
    />
  </label>
</div>
`;

exports[`CheckBoxGroup renders small input 1`] = `
.c1 {
  outline: none;
  margin: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  position: relative;
}

.checkbox--large .c1 {
  width: 24px;
  height: 24px;
}

.checkbox--small .c1 {
  width: 16px;
  height: 16px;
}

.c1:before {
  content: "";
  background-color: transparent;
  border-radius: 2px;
  border: 1px solid rgba(0,0,15,0.6);
  position: absolute;
}

.checkbox--large .c1:before {
  width: 24px;
  height: 24px;
}

.checkbox--small .c1:before {
  width: 16px;
  height: 16px;
}

.c1:before.checkbox--disabled {
  color: grey;
}

.c1:hover:before {
  border-width: 2px;
  border-color: rgba(2,108,223,1);
}

.c1:focus:before {
  outline: none;
}

.checkbox--small .c1:focus:before {
  width: 16px;
  height: 16px;
  border-radius: 2px;
  border: solid 1px rgba(2,108,223,1);
  background-color: rgba(255,255,255,1);
}

.checkbox--large .c1:focus:before {
  width: 24px;
  height: 24px;
  border-radius: 2px;
  border: solid 1px rgba(2,108,223,1);
  background-color: rgba(255,255,255,1);
}

.c1:checked:after {
  content: "";
  position: absolute;
}

.checkbox__multi--large .c1:checked:after {
  content: "";
  width: 12px;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  height: 3px;
  border-radius: 2px;
  background-color: rgba(2,108,223,1);
}

.checkbox__multi--small .c1:checked:after {
  content: "";
  width: 8px;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  height: 2px;
  border-radius: 2px;
  background-color: rgba(2,108,223,1);
}

.c0 {
  position: relative;
  outline: none;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-bottom: 10px;
  text-align: left;
  color: rgba(0,0,15,1);
}

.c0.checkbox--disabled {
  color: grey;
  cursor: default;
  pointer-events: none;
}

.c0.checkbox--large {
  font-size: 16px;
  line-height: 1.5;
}

.c0.checkbox--small {
  font-size: 14px;
  line-height: 1.5;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  outline: none;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin-left: 7px;
}

.c2 {
  width: 100%;
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: left;
  -webkit-justify-content: left;
  -ms-flex-pack: left;
  justify-content: left;
  position: absolute;
  opacity: 0;
}

.checkbox__checked .c2 {
  opacity: 1;
}

.checkbox__multi--small .c2 {
  display: none;
}

.checkbox__multi--large .c2 {
  display: none;
}

.c3 {
  margin-top: 4px;
}

<div
  onKeyDown={[Function]}
  role="checkbox"
>
   
  <label
    className="checkbox--large c0"
  >
    <input
      className="c1"
      data-testid="test-checkbox2"
      defaultChecked={false}
      disabled={false}
      id="something2input"
      name="something"
      onClick={[Function]}
      type="checkbox"
      value="2"
    />
    <div
      className="c2"
    >
      <svg
        className="c3"
        fill="none"
        fillRule="evenodd"
        height={24}
        stroke="#026CDF"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={3}
        viewBox="0 0 24 28"
        width={24}
      >
        <path
          d="M5.215 12.219l4.437 4.439 9.514-9.433"
        />
      </svg>
    </div>
    <span
      aria-checked={false}
      aria-labelledby="something2"
      className="c4"
      role="checkbox"
    />
  </label>
</div>
`;
